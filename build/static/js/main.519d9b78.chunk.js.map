{"version":3,"sources":["components/Header.js","components/Courses.js","components/CourseDetail.js","components/UserSignIn.js","components/UserSignUp.js","components/UserSignOut.js","components/CreateCourse.js","components/UpdateCourse.js","components/NotFound.js","components/UnhandledError.js","components/Forbidden.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["Header","JSON","parse","localStorage","getItem","react_default","a","createElement","className","react_router_dom","to","concat","Courses","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","courses","_this2","axios","get","then","res","setState","data","catch","err","response","status","console","error","history","push","map","course","index","key","id","title","version","xmlns","x","y","viewBox","points","Component","CourseDetail","user","handleDelete","bind","assertThisInitialized","match","params","User","_this3","_this$props","delete","auth","username","window","password","_this4","_this$state","isLoggedIn","UserId","renderprops","from","opacity","style","onClick","firstName","lastName","react_markdown_default","source","description","estimatedTime","materialsNeeded","UserSignIn","handleSubmit","e","emailAddress","preventDefault","handleSignIn","handleChange","defineProperty","target","name","value","goBack","validationError","onSubmit","type","placeholder","onChange","UserSignUp","confirmPassword","passwordsNotMatching","handleSignUp","_this$state2","method","url","message","emailInUseError","validationErrors","errors","_this$state3","toString","UserSignOut","removeItem","location","assign","react_router","CreateCourse","FirstName","LastName","UpdateCourse","userId","NotFound","unhandledError","Forbidden","PrivateRoute","_ref","component","rest","objectWithoutProperties","render","App","setItem","stringify","components_Header","exact","path","components_UserSignIn","components_UserSignUp","UnhandledError","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.519d9b78.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'; \n\n/* Header menu */\nconst Header = () => {\n\n  /* Check if the user is logged in - if Yes then return a different menu */\n  if(JSON.parse(localStorage.getItem('IsLoggedIn'))){\n\n    return (\n      <div className=\"header\">\n        <div className=\"bounds\">\n          <Link to=\"/\">\n            <h1 className=\"header--logo\">Courses</h1>\n          </Link>\n          <nav>\n            <span>{`Welcome ${localStorage.getItem('FirstName')} ${localStorage.getItem('LastName')}!`}</span>\n            <Link className=\"signin\" to=\"/signout\">Sign Out</Link>\n          </nav>\n        </div>\n      </div>\n    );\n\n  } else {\n\n    return (\n      <div className=\"header\">\n        <div className=\"bounds\">\n          <Link to=\"/\">\n            <h1 className=\"header--logo\">Courses</h1>\n          </Link>\n          <nav>\n            <Link className=\"signup\" to=\"/signup\">Sign Up</Link>\n            <Link className=\"signin\" to=\"/signin\">Sign In</Link>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nclass Courses extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      courses: [],\n    }\n  }\n\n  /* When page first loads - Do this: */\n  componentDidMount() {\n\n    /* Fetch the list of courses from the API using axios */    \n    axios\n      .get('https://rest-api-project-9.herokuapp.com/api/courses/')\n      .then(res => {\n        this.setState({\n          courses: res.data\n        });\n      })\n      /* Catch errors - Check if server error = push to /error page */\n      .catch(err => {\n        if (err.response.status === 500) {\n          console.error('Error fetching and parsing data', err);\n          this.props.history.push('/error');\n        } else {\n          this.props.history.push('/notfound');\n        }\n      });\n  }\n\n  render() {\n\n    const { courses } = this.state;\n\n    return (\n      <div className=\"bounds\">\n\n        {/* Loop over every course and display the course title on each card */}\n        {courses.map((course, index) => (\n          <div className=\"grid-33\" key={index}>\n            <Link className=\"course--module course--link\" to={\"/courses/\"+course.id}>\n              <h4 className=\"course--label\">Course</h4>\n              <h3 className=\"course--title\">{course.title}</h3>\n            </Link>\n          </div>\n        ))}\n        \n        <div className=\"grid-33\">\n          <Link className=\"course--module course--add--module\" to=\"/courses/create\">\n            <h3 className=\"course--add--title\">\n              <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 13 13\" className=\"add\">\n                <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \" />\n              </svg>\n              New Course\n            </h3>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Courses;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\n\n/* npm plugin to apply animation to rendered content - Slowly appears */\nimport { Spring } from 'react-spring/renderprops';\n\n\nclass CourseDetail extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      course: [],\n      user: [],\n    }\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  /* When page first loads - Do this: */\n  componentDidMount() {\n    const id = this.props.match.params.id    \n\n    /* Fetch the requested course from the API using axios */\n    axios\n      .get(`https://rest-api-project-9.herokuapp.com/api/courses/${id}`)\n      .then(res => {\n        /* If successful then save course and user data to state */\n        this.setState({\n          course: res.data,\n          user: res.data.User,\n        });\n      })\n      /* Catch errors - Check if server error = push to /error page */\n      .catch(err => {\n        if (err.response.status === 500) {\n          console.error('Error fetching and parsing data', err);\n          this.props.history.push('/error');\n        } else {\n          this.props.history.push('/notfound');\n        }\n      });\n  }\n\n  /* Handles request to delete course */\n  handleDelete() {\n    const { match: { params }, history } = this.props;\n\n    axios\n      .delete(`https://rest-api-project-9.herokuapp.com/api/courses/${params.id}`, {\n        auth: {\n          username: window.localStorage.getItem(\"EmailAddress\"),\n          password: window.localStorage.getItem(\"Password\"),\n        }\n      })\n      /* If successful then redirect back to courses page */\n      .then(() => {\n        history.push('/');\n      })\n      /* Catch errors - Check if server error = push to /error page */\n      .catch(err => {\n        if (err.response.status === 500) {\n          console.error('Error fetching and parsing data', err);\n          this.props.history.push('/error');\n        } else {\n          this.props.history.push('/notfound');\n        }\n      });\n  }\n\n  render () {\n\n    const { course, user } = this.state;\n    const isLoggedIn = localStorage.getItem(\"IsLoggedIn\");\n    const UserId = JSON.parse(localStorage.getItem(\"UserId\"));\n\n\n    return (\n      <Spring from={{ opacity: 0 }} to={{ opacity: 1}}>\n        {props => (\n          <div style={props}>\n            <div className=\"actions--bar\">\n              <div className=\"bounds\">\n                <div className=\"grid-100\">\n\n                  {/* Check if the user has access to delete this course */}\n                  {(isLoggedIn && user.id === UserId) ? (\n                      <span>\n                        <Link className=\"button\" to={`/courses/${course.id}/update`}>\n                          Update Course\n                        </Link>\n                        <button className=\"button\" to=\"#\" onClick={this.handleDelete}>\n                          Delete Course\n                        </button>\n                      </span>\n                  ) :  '' }\n\n                  <Link className=\"button button-secondary\" to=\"/\">\n                    Return to List\n                  </Link>\n\n                </div>\n              </div>\n            </div>\n            <div className=\"bounds course--detail\">\n              <div className=\"grid-66\">\n                <div className=\"course--header\">\n                  <h4 className=\"course--label\">Course</h4>\n                  <h3 className=\"course--title\">{course.title}</h3>\n                  <p>By {user.firstName} {user.lastName}</p>\n                </div>\n                <div className=\"course-description\">\n                  <ReactMarkdown source={course.description} />\n                </div>\n              </div>\n              <div className=\"grid-25 grid-right\">\n                <div className=\"course--stats\">\n                  <ul className=\"course--stats--list\">\n                    <li className=\"course--stats--list--item\">\n                      <h4>Estimated Time</h4>\n                      <h3>{course.estimatedTime}</h3>\n                    </li>\n                    <li className=\"course--stats--list--item\">\n                      <h4>Materials Needed</h4>\n                      <ul>\n                        <ReactMarkdown source={course.materialsNeeded} />\n                      </ul>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Spring>\n    )\n  }\n\n}\n\nexport default CourseDetail;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass UserSignIn extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailAddress: '',\n      password: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /* Submit button calls 'handleSignIn' function in app.js */\n  handleSubmit = e => {\n\n    const { emailAddress, password } = this.state;\n    e.preventDefault();\n\n    this.props.handleSignIn(emailAddress, password);\n  };\n\n  /* Handle changes to the form inputs */\n  handleChange = e => {\n    this.setState({\n      [ e.target.name ] : e.target.value \n    });\n  }\n\n  render() {\n    return (\n        \n        <div className=\"bounds\">\n\n          {/* If successful login then redirect to previous page */}\n          { localStorage.getItem(\"IsLoggedIn\") && (\n            this.props.history.goBack()\n          )}\n\n          <div className=\"grid-33 centered signin\">\n            <h1>Sign In</h1>\n            <div>\n              {/* Check if there are any validation errors - props info comes from app.js */}\n              { this.props.validationError &&  (\n              <div>\n                <h2 className=\"validation--errors--label\">Validation error</h2>\n                <br />\n                <div className=\"validation-errors\">\n                 <p>{this.props.validationError}</p>\n                </div>\n              </div>\n              )}\n              <form onSubmit={this.handleSubmit}>\n                <div>\n                  <input \n                    id=\"emailAddress\" \n                    name=\"emailAddress\" \n                    type=\"email\"\n                    className=\"\"\n                    placeholder=\"Email Address\"\n                    value={this.state.emailAddress}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </div>\n                <div>\n                  <input \n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    className=\"\"\n                    placeholder=\"Password\"\n                    value={this.state.password}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </div>\n                <div className=\"grid-100 pad-bottom\">\n                  <button className=\"button\" type=\"sumbit\">Sign In</button>\n                  <Link className=\"button button-secondary\" to=\"/\">Cancel</Link>\n                </div>\n              </form>\n              <p>&nbsp;</p>\n              <p>Don't have a user account?\n                <Link to=\"/signup\"> Click here </Link>\n                to sign up!\n              </p>\n            </div>\n          </div>\n        </div>\n      )\n  }\n}\n\nexport default UserSignIn;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass UserSignUp extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      password: '',\n      confirmPassword: '',\n      validationErrors: [],\n      emailInUseError: '',\n      passwordsNotMatching: false,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /* Submit button checks if password and confirm password fields match\n  * If true then run 'handleSignUp' function */\n  handleSubmit = (e) => {\n    const { password, confirmPassword } = this.state \n    e.preventDefault();\n    if(password === confirmPassword) {\n      this.setState ({ passwordsNotMatching: false })\n      this.handleSignUp();\n    } else {\n      this.setState ({ passwordsNotMatching: true })\n    }\n  }\n\n  /* calls API POST method to create a new user */\n  handleSignUp = () => {\n\n    const { firstName, lastName, emailAddress, password, confirmPassword } = this.state;\n\n    axios({\n      method: 'post',\n      url: 'https://rest-api-project-9.herokuapp.com/api/users/',\n      data: {\n        firstName,\n        lastName,\n        emailAddress,\n        password,\n        confirmPassword,\n      }\n    })\n    .then(() => {\n\n      {/* After successful sign-up then call handleSignIn function to automatically sign-in the new user */}\n      this.props.handleSignIn(emailAddress, password);\n      \n    })\n    /* Catch errors - Check if server error = push to /error page */\n    .catch(err => {\n      if (err.response.status === 500) {\n        console.error('Error fetching and parsing data', err);\n        this.props.history.push('/error');\n\n      /* If error message is email is already in use */\n      } else if (err.response.data.message) {\n        this.setState ({ emailInUseError: err.response.data.message })\n      /* If error message is about validation errors */\n      } else {\n        this.setState({ validationErrors: err.response.data.errors })\n      }\n    });\n  }\n\n  /* Handle changes to the form inputs */\n  handleChange = (e) => {\n    this.setState({\n      [ e.target.name ] : e.target.value \n    });\n  }\n\n  render() {\n\n    const { validationErrors, emailInUseError, passwordsNotMatching } = this.state\n\n    return (\n      <div className=\"bounds\">\n\n        {/* If successful signup then redirect to homepage */}\n        { localStorage.getItem(\"IsLoggedIn\") && (\n            this.props.history.push('/')\n        )}\n\n        <div className=\"grid-33 centered signin\">\n          <h1>Sign Up</h1>\n          <div>\n            <div className=\"validation-errors\">\n              <ul>\n                {/* Checks if there are any validation errors */}\n                { validationErrors ? (\n                  validationErrors.map((err) =>\n                    <li key={err.toString()}>{err}</li>\n                  )\n                ) :''}\n                { passwordsNotMatching ? (\n                  <li>Passwords are not matching</li>\n                ) :''}\n                {emailInUseError ? (\n                  <li>{emailInUseError}</li>\n                ) : ''}\n              </ul>\n            </div>\n            <form onSubmit={this.handleSubmit}>\n              <div>\n                <input \n                  id=\"firstName\" \n                  name=\"firstName\" \n                  type=\"text\"\n                  className=\"\"\n                  placeholder=\"First Name\"\n                  value={this.state.firstName}\n                  onChange={e => this.handleChange(e)}\n                />\n              </div>\n              <div>\n                <input \n                  id=\"lastName\" \n                  name=\"lastName\" \n                  type=\"text\"\n                  className=\"\"\n                  placeholder=\"Last Name\"\n                  value={this.state.lastName}\n                  onChange={e => this.handleChange(e)}\n                />\n              </div>\n              <div>\n                <input \n                  id=\"emailAddress\" \n                  name=\"emailAddress\" \n                  type=\"email\"\n                  className=\"\"\n                  placeholder=\"Email Address\"\n                  value={this.state.emailAddress}\n                  onChange={e => this.handleChange(e)}\n                />\n              </div>\n              <div>\n                <input \n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  className=\"\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={e => this.handleChange(e)}\n                />\n              </div>\n              <div>\n                <input \n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  className=\"\"\n                  placeholder=\"Confirm Password\"\n                  value={this.state.confirmPassword}\n                  onChange={e => this.handleChange(e)}\n                />\n              </div>\n              <div className=\"grid-100 pad-bottom\">\n                <button className=\"button\" type=\"sumbit\">Sign Up</button>\n                <Link className=\"button button-secondary\" to=\"/\">Cancel</Link>\n              </div>\n            </form>\n            <p>&nbsp;</p>\n            <p>Already have a user account?\n              <Link to=\"/signin\"> Click here </Link>\n              to sign in!\n            </p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default UserSignUp;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n/* Clear browser local storage on sign-out */\nclass UserSignOut extends Component {\n\n  componentDidMount() {\n    window.localStorage.removeItem('FirstName')\n    window.localStorage.removeItem('LastName')\n    window.localStorage.removeItem('EmailAddress')\n    window.localStorage.removeItem('Password')\n    window.localStorage.removeItem('UserId')\n    window.localStorage.removeItem('IsLoggedIn')\n    window.localStorage.removeItem('id')\n    window.localStorage.removeItem('name')\n    window.localStorage.removeItem('password')\n    window.localStorage.removeItem('username')\n    window.location.assign('/signin')\n  }\n\n  render() {\n    return(\n      <Redirect to=\"/signin\" />\n    )\n  }\n}\n\nexport default UserSignOut;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass CreateCourse extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      validationErrors: '',\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /* Handle changes to the form inputs */\n  handleChange = e => {\n    this.setState({\n      [ e.target.name ] : e.target.value \n    });\n  }\n\n  /* Submit button calls the API POST method */\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    axios({\n      method: 'post',\n      url: 'https://rest-api-project-9.herokuapp.com/api/courses',\n      auth: {\n        username: window.localStorage.getItem(\"EmailAddress\"),\n        password: window.localStorage.getItem(\"Password\"),\n      },\n      data: {\n        title: this.state.title,\n        description: this.state.description,\n        estimatedTime: this.state.estimatedTime,\n        materialsNeeded: this.state.materialsNeeded,\n      }\n    })\n    .then( () => {\n      this.props.history.push('/');\n    })\n    /* Catch errors - Check if server error = push to /error page */\n    .catch(err => {\n      if (err.response.status === 500) {\n        console.error('Error fetching and parsing data', err);\n        this.props.history.push('/error');\n      } else {\n        this.setState({ validationErrors: err.response.data.message });\n      }\n    });\n  }\n\n  render() {\n\n    const validationErrors = this.state.validationErrors;\n\n    return (\n      <div className=\"bounds course--detail\">\n        <h1>Create Course</h1>\n        <div>\n          <div>\n          {/* If validation errors on the form then display them */}\n          {validationErrors ? (\n            <div>\n              <h2 className=\"validation--errors--labels\">Validation errors</h2>\n              <div className=\"validation-errors\">\n                <ul>\n                  <li>{validationErrors}</li>\n                </ul>\n              </div>\n            </div>\n          ):''}\n          </div>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"grid-66\">\n              <div className=\"course--header\">\n                <h4 className=\"course--label\">Course</h4>\n                <div>\n                  <input \n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\"\n                    className=\"input-title course--title--input\"\n                    placeholder=\"Course title...\"\n                    onChange={e => this.handleChange(e)}\n                  />\n                </div>\n                <p>By {localStorage.FirstName} {localStorage.LastName}</p>\n              </div>\n              <div className=\"course--description\">\n                <div>\n                  <textarea\n                    id=\"description\"\n                    name=\"description\"\n                    className=\"\"\n                    placeholder=\"Course description...\"\n                    onChange={e => this.handleChange(e)}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"grid-25 grid-right\">\n              <div className=\"course--stats\">\n                <ul className=\"course--stats--list\">\n                  <li className=\"course--stats--list--item\">\n                    <h4>Estimated Time</h4>\n                    <div>\n                      <input\n                        id=\"estimatedTime\"\n                        name=\"estimatedTime\"\n                        type=\"text\"\n                        className=\"course--time--input\"\n                        placeholder=\"Hours\"\n                        onChange={e => this.handleChange(e)}\n                      />\n                    </div>\n                  </li>\n                  <li className=\"course--stats--list--item\">\n                    <h4>Materials Needed</h4>\n                    <div>\n                      <textarea\n                        id=\"materialsNeeded\"\n                        name=\"materialsNeeded\"\n                        className=\"\"\n                        placeholder=\"List materials...\"\n                        onChange={e => this.handleChange(e)}\n                      />\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"grid-100 pad-bottom\">\n              <button className=\"button\" type=\"submit\">\n                Create Course\n              </button>\n              <Link className=\"button button-secondary\" to=\"/\">\n                Cancel\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateCourse;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass UpdateCourse extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      course: [],\n      user: [],\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      validationErrors: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  /* Submit button sends PUT request to API */\n  handleSubmit = (e) => {\n\n    const id =  this.props.match.params.id;\n    e.preventDefault();\n\n    axios ({\n      method: 'put',\n      url: `https://rest-api-project-9.herokuapp.com/api/courses/${id}`,\n      auth: {\n        username: window.localStorage.getItem('EmailAddress'),\n        password: window.localStorage.getItem('Password')\n      },\n      data: {\n        id: id,\n        title: this.state.title,\n        description: this.state.description,\n        estimatedTime: this.state.estimatedTime,\n        materialsNeeded: this.state.materialsNeeded,\n      }\n    })\n    .then( () => {\n      this.props.history.push(`/courses/${id}`);\n    })\n    /* Catch errors - Check if server error = push to /error page */\n    .catch(err => {\n      if (err.response.status === 500) {\n        console.error('Error fetching and parsing data', err);\n        this.props.history.push('/error');\n      } else {\n        this.setState({ validationErrors: err.response.data.message })\n      }\n    });\n  }\n\n  /* Handle changes to the form inputs */\n  handleChange = e => {\n    this.setState({\n      [ e.target.name ] : e.target.value \n    });\n  }\n\n  /* When page first loads - Do this: */\n  componentDidMount() {\n\n    const id =  this.props.match.params.id;\n\n    axios.get(`https://rest-api-project-9.herokuapp.com/api/courses/${id}`)\n      .then(res => {\n        const course = res.data;\n\n        /* Check if this user is allowed edit this course (Are they the author of the course?) */\n        if(course.userId === JSON.parse(localStorage.getItem('UserId'))) {\n          this.setState({\n            user: course.User,\n            title: course.title,\n            description: course.description,\n            estimatedTime: course.estimatedTime,\n            materialsNeeded: course.materialsNeeded,\n          });\n        } \n        else {\n          this.props.history.push('/forbidden');\n        }\n      })\n      /* Catch errors - Check if server error = push to /error page */\n      .catch(err => {\n        if (err.response.status === 500) {\n          console.error('Error fetching and parsing data', err);\n          this.props.history.push('/error');\n        } else {\n          this.props.history.push('/notfound');\n        }\n      });\n  }\n\n  render() {\n    const { title, description, estimatedTime, materialsNeeded, user, validationErrors } = this.state;\n    return (\n      <div className=\"bounds course--detail\">\n        <h1>Update Course</h1>\n        <div>\n          {/* Check if there are any validation errors */}\n          {validationErrors ? (\n            <div>\n              <h2 className=\"validation--errors--labels\">Validation errors</h2>\n              <div className=\"validation-errors\">\n                <ul>\n                  <li>{validationErrors}</li>\n                </ul>\n              </div>\n            </div>\n          ):''}\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"grid-66\">\n              <div className=\"course--header\">\n                <h4 className=\"course--label\">Course</h4>\n                <div>\n                  <input \n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\"\n                    className=\"input-title course--title--input\"\n                    placeholder=\"Course title...\"\n                    value={title}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </div>\n                <p>By {user.firstName} {user.lastName}</p>\n              </div>\n              <div className=\"course--description\">\n                <div>\n                  <textarea\n                    id=\"description\"\n                    name=\"description\"\n                    className=\"\"\n                    placeholder=\"Course description...\"\n                    value={description}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"grid-25 grid-right\">\n              <div className=\"course--stats\">\n                <ul className=\"course--stats--list\">\n                  <li className=\"course--stats--list--item\">\n                    <h4>Estimated Time</h4>\n                    <div>\n                      <input\n                        id=\"estimatedTime\"\n                        name=\"estimatedTime\"\n                        type=\"text\"\n                        className=\"course--time--input\"\n                        placeholder=\"Hours\"\n                        value={estimatedTime}\n                        onChange={e => this.handleChange(e)}\n                      />\n                    </div>\n                  </li>\n                  <li className=\"course--stats--list--item\">\n                    <h4>Materials Needed</h4>\n                    <div>\n                      <textarea\n                        id=\"materialsNeeded\"\n                        name=\"materialsNeeded\"\n                        className=\"\"\n                        placeholder=\"List materials...\"\n                        value={materialsNeeded}\n                        onChange={e => this.handleChange(e)}\n                      />\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"grid-100 pad-bottom\">\n              <button className=\"button\" type=\"submit\">\n                Update Course\n              </button>\n              <Link \n                className=\"button button-secondary\" \n                to={\"/courses/\" + this.props.match.params.id}\n                >Cancel\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default UpdateCourse;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n/* Not Found / 404 error page */\nconst NotFound = () => {\n  return (\n    <div className=\"bounds\">\n      <h1>Not Found</h1>\n      <p>Sorry! We couldn't find the page you're looking for.</p>\n      <Link className=\"button button-secondary\" to=\"/\">Back Home</Link>\n    </div>\n  )\n}\n\nexport default NotFound;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n/* 500 error page */\nconst unhandledError = () => {\n  return (\n    <div className=\"bounds\">\n      <h1>Error</h1>\n      <p>Sorry! We just encountered an unexpected error.</p>\n      <Link className=\"button button-secondary\" to=\"/\">Back Home</Link>\n    </div>\n  )\n}\n\nexport default unhandledError;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n/* Authentication error page */\nconst Forbidden = () => {\n  return (\n    <div className=\"bounds\">\n      <h1>Forbidden</h1>\n      <p>Sorry, you don't have user access to this page</p>\n      <Link className=\"button button-secondary\" to=\"/\">Back Home</Link>\n    </div>\n  )\n}\n\nexport default Forbidden;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n/* When trying to access a Private Route - Check if the user is logged in */\nexport default function PrivateRoute ({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props => \n\n        localStorage.getItem(\"IsLoggedIn\")\n        ? ( <Component {...props} /> )\n        : ( <Redirect to=\"/signin\" /> )\n      }\n    />\n  )\n}","// App.js is a container for all other components and manages routing\n\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\n\n// Import components\nimport Header from './components/Header';\nimport Courses from './components/Courses';\nimport CourseDetail from './components/CourseDetail';\nimport UserSignIn from './components/UserSignIn';\nimport UserSignUp from './components/UserSignUp';\nimport UserSignOut from './components/UserSignOut';\nimport CreateCourse from './components/CreateCourse';\nimport UpdateCourse from './components/UpdateCourse';\nimport NotFound from './components/NotFound';\nimport UnhandledError from './components/UnhandledError';\nimport Forbidden from './components/Forbidden';\nimport PrivateRoute from './components/PrivateRoute';\n\nclass App extends Component {\n\n  /* Keeps global state in App component - instead of React Context API\n  * After user signs-in this update props and make them available to pass down to all other components */\n\n  constructor() {\n    super();\n    this.state = {\n      //Hold state for validation on sign-in\n      validationError: '',\n    };\n    this.handleSignIn = this.handleSignIn.bind(this);\n  }\n\n  /* Called from UserSignIn component - handles the sign-in process */\n  handleSignIn(username, password, props) {\n    axios.get(\"https://rest-api-project-9.herokuapp.com/api/users\", {\n      auth: {\n        username: username,\n        password: password,\n      }\n    })\n    /* If authentication is successful - Store user data in the browser */\n    .then(res => { \n      window.localStorage.setItem('FirstName',res.data.firstName)\n      window.localStorage.setItem('LastName', res.data.lastName)\n      window.localStorage.setItem('EmailAddress', username)\n      window.localStorage.setItem('Password', password)\n      window.localStorage.setItem('UserId', JSON.stringify(res.data.id))\n      window.localStorage.setItem('IsLoggedIn', JSON.stringify(true))\n      // window.location.assign('/')\n\n      /* Clear validation errors from sign-in form */\n      this.setState({ validationError: '' })\n    })\n\n    /* Catch errors - Check if server error = push to /error page */\n    .catch(err => {\n      if (err.response.status === 401) {\n        /* Status 401 = unauthorized access - must be a validation error */\n        this.setState ({validationError: err.response.data.message })\n      } else {\n        /* If not a 401 validation error then it must be a server error */\n        console.error('Error fetching and parsing data', err);\n        this.props.history.push('/error');\n      }\n    });\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"root\">\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Courses} />\n            <PrivateRoute path=\"/courses/create\" component={CreateCourse} />\n            <PrivateRoute path=\"/courses/:id/update\" component={UpdateCourse} />\n            <Route exact path=\"/courses/:id\" component={CourseDetail} />\n\n            {/* Pass handleSignIn, validationErrors, and props through to UserSignIn component*/}\n            <Route exact path=\"/signin\" component={ (props) => <UserSignIn\n              handleSignIn={this.handleSignIn} \n              validationError={this.state.validationError}\n              {...props} /> \n            } />\n\n            <Route exact path=\"/signup\" component={ (props) => <UserSignUp\n              handleSignIn={this.handleSignIn}\n              {...props} /> \n            } />\n\n            <Route exact path=\"/signout\" component={UserSignOut} />\n\n            <Route exact path=\"/forbidden\" component={Forbidden} />\n            <Route exact path=\"/notfound\" component={NotFound} />\n            <Route exact path=\"/error\" component={UnhandledError} />\n\n            {/* If any route doesn't match the above then route to NotFound component */}\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </BrowserRouter>    \n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}