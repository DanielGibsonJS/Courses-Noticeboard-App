{"ast":null,"code":"var _jsxFileName = \"/Users/danielgibson/Desktop/GitHub/techdegree-project-10/client/src/components/Courses.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // import { Spring } from 'react-spring/renderprops';\n\nclass Courses extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      courses: []\n    };\n\n    this.getCourses = () => {\n      axios.get('http://localhost:5000/api/courses/').then(res => {\n        this.setState({\n          courses: res.data\n        });\n      }) //Catch any errors and log it to the console\n      .catch(err => {\n        if (err.response.status === 400) {\n          this.props.history.push('/notfound');\n        } else {\n          console.log('Error fetching and parsing data', err);\n          this.props.history.push('/error');\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getCourses();\n  }\n  /***\n  * Fetch the list of courses from the API using axios\n  ***/\n\n\n  render() {\n    const courses = this.state.courses;\n    return (// <Spring from={{ opacity: 0 }} to={{ opacity: 1}}>\n      React.createElement(\"div\", {\n        className: \"bounds\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, courses.map((course, index) => React.createElement(\"div\", {\n        className: \"grid-33\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"course--module course--link\",\n        to: \"/courses/\" + course.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"course--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Course\"), React.createElement(\"h3\", {\n        className: \"course--title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, course.title)))), React.createElement(\"div\", {\n        className: \"grid-33\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"course--module course--add--module\",\n        to: \"/courses/create\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"course--add--title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"svg\", {\n        version: \"1.1\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        x: \"0px\",\n        y: \"0px\",\n        viewBox: \"0 0 13 13\",\n        className: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"polygon\", {\n        points: \"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), \"New Course\")))) // </Spring>\n\n    );\n  }\n\n}\n\nexport default Courses;","map":{"version":3,"sources":["/Users/danielgibson/Desktop/GitHub/techdegree-project-10/client/src/components/Courses.js"],"names":["React","Component","axios","Link","Courses","state","courses","getCourses","get","then","res","setState","data","catch","err","response","status","props","history","push","console","log","componentDidMount","render","map","course","index","id","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AAGA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BI,KAD8B,GACtB;AACNC,MAAAA,OAAO,EAAE;AADH,KADsB;;AAAA,SAY9BC,UAZ8B,GAYjB,MAAM;AACjBL,MAAAA,KAAK,CAACM,GAAN,CAAU,oCAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACX,aAAKC,QAAL,CAAc;AACZL,UAAAA,OAAO,EAAEI,GAAG,CAACE;AADD,SAAd;AAGD,OALH,EAME;AANF,OAOGC,KAPH,CAOSC,GAAG,IAAI;AACZ,YAAIA,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC/B,eAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACD,SAFD,MAEO;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CP,GAA/C;AACA,eAAKG,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;AACF,OAdH;AAeD,KA5B6B;AAAA;;AAK9BG,EAAAA,iBAAiB,GAAG;AAClB,SAAKf,UAAL;AACD;AAED;;;;;AAqBAgB,EAAAA,MAAM,GAAG;AAAA,UAECjB,OAFD,GAEa,KAAKD,KAFlB,CAECC,OAFD;AAIP,WACE;AACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGA,OAAO,CAACkB,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KACX;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,GAAG,EAAEA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,6BAAhB;AAA8C,QAAA,EAAE,EAAE,cAAYD,MAAM,CAACE,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BF,MAAM,CAACG,KAAtC,CAFF,CADF,CADD,CAHH,EAYE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,oCAAhB;AAAqD,QAAA,EAAE,EAAC,iBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,OAAO,EAAC,KAAb;AAAmB,QAAA,KAAK,EAAC,4BAAzB;AAAsD,QAAA,CAAC,EAAC,KAAxD;AAA8D,QAAA,CAAC,EAAC,KAAhE;AAAsE,QAAA,OAAO,EAAC,WAA9E;AAA0F,QAAA,SAAS,EAAC,KAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAS,QAAA,MAAM,EAAC,sDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eADF,CADF,CAZF,CAFJ,CAyBE;;AAzBF;AA2BD;;AA7D6B;;AAiEhC,eAAexB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n// import { Spring } from 'react-spring/renderprops';\n\n\nclass Courses extends Component {\n  state = {\n    courses: [],\n  };\n\n  componentDidMount() {\n    this.getCourses();\n  }\n\n  /***\n  * Fetch the list of courses from the API using axios\n  ***/\n  getCourses = () => {\n    axios.get('http://localhost:5000/api/courses/')\n      .then(res => {\n        this.setState({\n          courses: res.data\n        });\n      })\n      //Catch any errors and log it to the console\n      .catch(err => {\n        if (err.response.status === 400) {\n          this.props.history.push('/notfound');\n        } else {\n          console.log('Error fetching and parsing data', err);\n          this.props.history.push('/error');\n        }\n      });\n  }\n\n  render() {\n    \n    const { courses } = this.state;\n\n    return (\n      // <Spring from={{ opacity: 0 }} to={{ opacity: 1}}>\n        <div className=\"bounds\">\n\n          {/* Loop over every course and display the course title on each card */}\n          {courses.map((course, index) => (\n            <div className=\"grid-33\" key={index}>\n              <Link className=\"course--module course--link\" to={\"/courses/\"+course.id}>\n                <h4 className=\"course--label\">Course</h4>\n                <h3 className=\"course--title\">{course.title}</h3>\n              </Link>\n            </div>\n          ))}\n          \n          <div className=\"grid-33\">\n            <Link className=\"course--module course--add--module\" to=\"/courses/create\">\n              <h3 className=\"course--add--title\">\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 13 13\" className=\"add\">\n                  <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \" />\n                </svg>\n                New Course\n              </h3>\n            </Link>\n          </div>\n        </div>\n      // </Spring>\n    )\n  }\n\n}\n\nexport default Courses;\n"]},"metadata":{},"sourceType":"module"}