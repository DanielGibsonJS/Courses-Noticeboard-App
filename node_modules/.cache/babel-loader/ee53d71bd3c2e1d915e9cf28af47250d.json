{"ast":null,"code":"var _jsxFileName = \"/Users/danielgibson/Desktop/GitHub/techdegree-project-10/client/src/components/UpdateCourse.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass UpdateCourse extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      const params = this.props.match.params;\n      e.preventDefault();\n      axios({\n        method: 'put',\n        url: \"http://localhost:5000/api/courses/\".concat(params.id),\n        auth: {\n          username: window.localStorage.getItem('Email'),\n          password: window.localStorage.getitem('Password')\n        },\n        data: {\n          title: this.state.title,\n          description: this.state.description,\n          estimatedTime: this.state.estimatedTime,\n          materialsNeeded: this.state.materialsNeeded\n        }\n      }).then(res => {\n        this.props.history.push(\"/courses/\".concat(params.id));\n      }).catch(err => {\n        console.log(err.response.data.message);\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleCancel = e => {\n      let history = this.props.history;\n      let course = this.state.course;\n      e.preventDefault();\n      history.push(\"/courses/\".concat(course._id));\n    };\n\n    this.state = {\n      course: [],\n      user: [],\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '' // validationErrors: '',\n\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  } // state = {\n  //   title: '',\n  //   description: '',\n  //   estimatedTime: '',\n  //   materialsNeeded: '',\n  //   user: '',\n  //   validationErrors: '',\n  // }\n  // componentDidMount() {\n  //   this.getCourse();\n  // }\n  // Get course data for matching course ID\n  // getCourse = () => {\n  //   axios.get(`http://localhost:5000/api/courses/` + this.props.match.params.id)\n  //     .then(res => {\n  //       const course = res.data;\n  //       if(course.User.id !== parseInt(localStorage.getItem(\"id\"))) {\n  //         this.props.history.push('/forbidden');\n  //       } else {\n  //         this.setState({\n  //           title: course.title,\n  //           description: course.description,\n  //           estimatedTime: course.estimatedTime,\n  //           materialsNeeded: course.materialsNeeded,\n  //           fullName: `${course.User.firstName} ${course.User.lastName}`,\n  //         });\n  //       }\n  //     })\n  //     //Catch and handle errors\n  //     .catch(err => {\n  //       if (err.response.status === 404) {\n  //         this.props.history.push('/notfound');\n  //       } else {\n  //         console.error('Error fetching and parsing data', err);\n  //         this.props.history.push('/error');\n  //       }\n  //     });\n  // }\n\n\n  componentDidMount() {\n    const params = this.props.match.params;\n    axios.get(\"http://localhost:5000/api/courses/\".concat(params.id)).then(res => {\n      this.setState({\n        course: res.data,\n        user: res.data.User\n      });\n    });\n  } // // Handle form submit - Update course data\n  // handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   const { id, title, description, estimatedTime, materialsNeeded } = this.state;\n  //   if (title === '' && description === '') {\n  //     this.setState({\n  //       validationErrors: \"Please enter a title and a description\"\n  //     });\n  //   } else if (title === '') {\n  //     this.setState({\n  //       validationErrors: \"Please enter a title\"\n  //     });\n  //   } else if (description === '') {\n  //     this.setState({\n  //       validationErrors: \"Please enter a description\"\n  //     });\n  //   } else {\n  //     axios({\n  //       method: 'put',\n  //       url: `http://localhost:5000/api/courses/` + this.props.match.params.id,\n  //       auth: {\n  //         username: localStorage.getItem('username'),\n  //         password: localStorage.getItem('password')\n  //       },\n  //       data: {\n  //         title,\n  //         description,\n  //         estimatedTime, \n  //         materialsNeeded,\n  //       }\n  //     })\n  //     .then(() => {\n  //       this.props.history.push(`/courses/` + this.props.match.params.id)\n  //       console.log(\"Successful update\")\n  //     })\n  //     .catch( err => {\n  //       if (err.response.status === 400) {\n  //         this.setState({\n  //           validationErrors: err.response.data.message\n  //         });\n  //       } else if (err.response.status === 500) {\n  //         console.error('Error fetching and parsing data', err);\n  //         this.props.history.push('/error');\n  //       }\n  //     });\n  //   }\n  // }\n\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          description = _this$state.description,\n          estimatedTime = _this$state.estimatedTime,\n          materialsNeeded = _this$state.materialsNeeded,\n          course = _this$state.course,\n          user = _this$state.user;\n    return React.createElement(\"div\", {\n      className: \"bounds course--detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Update Course\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid-66\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"course--header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"course--label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Course\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"title\",\n      name: \"title\",\n      type: \"text\",\n      className: \"input-title course--title--input\",\n      placeholder: \"Course title...\",\n      defaultValue: course.title,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"By \", user.firstName, \" \", user.lastName)), React.createElement(\"div\", {\n      className: \"course--description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"description\",\n      name: \"description\",\n      className: \"\" // placeholder=\"Course description...\"\n      ,\n      placeholder: this.state.course.description // defaultValue={description}\n      ,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"grid-25 grid-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"course--stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"course--stats--list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"course--stats--list--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Estimated Time\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"estimatedTime\",\n      name: \"estimatedTime\",\n      type: \"text\",\n      className: \"course--time--input\",\n      placeholder: \"Hours\",\n      defaultValue: this.state.course.estimatedTime,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }))), React.createElement(\"li\", {\n      className: \"course--stats--list--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Materials Needed\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"materialsNeeded\",\n      name: \"materialsNeeded\",\n      className: \"\",\n      placeholder: \"List materials...\",\n      defaultValue: this.state.course.materialsNeeded,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"grid-100 pad-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Update Course\"), React.createElement(\"button\", {\n      className: \"button button-secondary\",\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default UpdateCourse;","map":{"version":3,"sources":["/Users/danielgibson/Desktop/GitHub/techdegree-project-10/client/src/components/UpdateCourse.js"],"names":["React","Component","Link","axios","UpdateCourse","constructor","props","handleSubmit","e","params","match","preventDefault","method","url","id","auth","username","window","localStorage","getItem","password","getitem","data","title","state","description","estimatedTime","materialsNeeded","then","res","history","push","catch","err","console","log","response","message","handleChange","setState","target","name","value","handleCancel","course","_id","user","bind","componentDidMount","get","User","render","firstName","lastName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass UpdateCourse extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      course: [],\n      user: [],\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      // validationErrors: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n  // state = {\n  //   title: '',\n  //   description: '',\n  //   estimatedTime: '',\n  //   materialsNeeded: '',\n  //   user: '',\n  //   validationErrors: '',\n  // }\n\n  // componentDidMount() {\n  //   this.getCourse();\n  // }\n\n  // Get course data for matching course ID\n  // getCourse = () => {\n  //   axios.get(`http://localhost:5000/api/courses/` + this.props.match.params.id)\n  //     .then(res => {\n  //       const course = res.data;\n\n  //       if(course.User.id !== parseInt(localStorage.getItem(\"id\"))) {\n  //         this.props.history.push('/forbidden');\n  //       } else {\n  //         this.setState({\n  //           title: course.title,\n  //           description: course.description,\n  //           estimatedTime: course.estimatedTime,\n  //           materialsNeeded: course.materialsNeeded,\n  //           fullName: `${course.User.firstName} ${course.User.lastName}`,\n  //         });\n  //       }\n  //     })\n  //     //Catch and handle errors\n  //     .catch(err => {\n  //       if (err.response.status === 404) {\n  //         this.props.history.push('/notfound');\n  //       } else {\n  //         console.error('Error fetching and parsing data', err);\n  //         this.props.history.push('/error');\n  //       }\n  //     });\n  // }\n  \n  handleSubmit = (e) => {\n    const {match: { params }} = this.props;\n    e.preventDefault();\n    axios ({\n      method: 'put',\n      url: `http://localhost:5000/api/courses/${params.id}`,\n      auth: {\n        username: window.localStorage.getItem('Email'),\n        password: window.localStorage.getitem('Password')\n      },\n      data: {\n        title: this.state.title,\n        description: this.state.description,\n        estimatedTime: this.state.estimatedTime,\n        materialsNeeded: this.state.materialsNeeded,\n      }\n    })\n    .then(res => {\n      this.props.history.push(`/courses/${params.id}`);\n    })\n    .catch(err => {\n      console.log(err.response.data.message)\n    });\n  }\n\n  // Handle changes to the form inputs\n  handleChange = e => {\n    this.setState({\n      [ e.target.name ] : e.target.value \n    });\n  }\n\n  handleCancel = (e) => {\n    let { history } = this.props;\n    let { course } = this.state;\n    e.preventDefault();\n    history.push(`/courses/${course._id}`);\n  }\n\n  componentDidMount() {\n    const { match: { params }} = this.props;\n    axios.get(`http://localhost:5000/api/courses/${params.id}`)\n      .then(res => {\n        this.setState({\n          course: res.data,\n          user: res.data.User,\n        });\n      })\n  }\n\n  // // Handle form submit - Update course data\n  // handleSubmit = (e) => {\n  //   e.preventDefault();\n\n  //   const { id, title, description, estimatedTime, materialsNeeded } = this.state;\n    \n  //   if (title === '' && description === '') {\n  //     this.setState({\n  //       validationErrors: \"Please enter a title and a description\"\n  //     });\n  //   } else if (title === '') {\n  //     this.setState({\n  //       validationErrors: \"Please enter a title\"\n  //     });\n  //   } else if (description === '') {\n  //     this.setState({\n  //       validationErrors: \"Please enter a description\"\n  //     });\n  //   } else {\n  //     axios({\n  //       method: 'put',\n  //       url: `http://localhost:5000/api/courses/` + this.props.match.params.id,\n  //       auth: {\n  //         username: localStorage.getItem('username'),\n  //         password: localStorage.getItem('password')\n  //       },\n  //       data: {\n  //         title,\n  //         description,\n  //         estimatedTime, \n  //         materialsNeeded,\n  //       }\n  //     })\n  //     .then(() => {\n  //       this.props.history.push(`/courses/` + this.props.match.params.id)\n  //       console.log(\"Successful update\")\n  //     })\n  //     .catch( err => {\n  //       if (err.response.status === 400) {\n  //         this.setState({\n  //           validationErrors: err.response.data.message\n  //         });\n  //       } else if (err.response.status === 500) {\n  //         console.error('Error fetching and parsing data', err);\n  //         this.props.history.push('/error');\n  //       }\n  //     });\n  //   }\n  // }\n\n\n\n  render() {\n\n    const { title, description, estimatedTime, materialsNeeded, course, user } = this.state;\n\n    return (\n      <div className=\"bounds course--detail\">\n        <h1>Update Course</h1>\n        <div>\n          {/* {validationErrors ? (\n            <div>\n              <h2 className=\"validation--errors--labels\">Validation errors</h2>\n              <div className=\"validation-errors\">\n                <ul>\n                  <li>{validationErrors}</li>\n                </ul>\n              </div>\n            </div>\n          ):''} */}\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"grid-66\">\n              <div className=\"course--header\">\n                <h4 className=\"course--label\">Course</h4>\n                <div>\n                  <input \n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\"\n                    className=\"input-title course--title--input\"\n                    placeholder=\"Course title...\"\n                    defaultValue={course.title}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </div>\n                <p>By {user.firstName} {user.lastName}</p>\n              </div>\n              <div className=\"course--description\">\n                <div>\n                  <textarea\n                    id=\"description\"\n                    name=\"description\"\n                    className=\"\"\n                    // placeholder=\"Course description...\"\n                    placeholder={this.state.course.description}\n                    // defaultValue={description}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"grid-25 grid-right\">\n              <div className=\"course--stats\">\n                <ul className=\"course--stats--list\">\n                  <li className=\"course--stats--list--item\">\n                    <h4>Estimated Time</h4>\n                    <div>\n                      <input\n                        id=\"estimatedTime\"\n                        name=\"estimatedTime\"\n                        type=\"text\"\n                        className=\"course--time--input\"\n                        placeholder=\"Hours\"\n                        defaultValue={this.state.course.estimatedTime}\n                        onChange={e => this.handleChange(e)}\n                      />\n                    </div>\n                  </li>\n                  <li className=\"course--stats--list--item\">\n                    <h4>Materials Needed</h4>\n                    <div>\n                      <textarea\n                        id=\"materialsNeeded\"\n                        name=\"materialsNeeded\"\n                        className=\"\"\n                        placeholder=\"List materials...\"\n                        defaultValue={this.state.course.materialsNeeded}\n                        onChange={e => this.handleChange(e)}\n                      />\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"grid-100 pad-bottom\">\n              <button className=\"button\" type=\"submit\">\n                Update Course\n              </button>\n              <button className=\"button button-secondary\" onClick={this.handleCancel}>Cancel</button>\n              {/* <Link className=\"button button-secondary\" to=\"/\">\n                Cancel\n              </Link> */}\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default UpdateCourse;"]},"metadata":{},"sourceType":"module"}