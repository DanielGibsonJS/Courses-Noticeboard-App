{"ast":null,"code":"var _jsxFileName = \"/Users/danielgibson/Desktop/GitHub/techdegree-project-10/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport axios from 'axios'; // import UserContext from './components/UserContext';\n\nimport Header from './components/Header';\nimport Courses from './components/Courses';\nimport CourseDetail from './components/CourseDetail';\nimport UserSignIn from './components/UserSignIn';\nimport UserSignUp from './components/UserSignUp';\nimport CreateCourse from './components/CreateCourse';\nimport UpdateCourse from './components/UpdateCourse';\nimport NotFound from './components/NotFound';\nimport Error from './components/Error';\nimport Forbidden from './components/Fobidden';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      authenticationErrors: '' // handleSignIn(e, emailAddress, password) {\n      //   if(e) {\n      //     e.preventDefault();\n      //   }\n      //   axios.get('http://localhost:5000/api/users',\n      //     {\n      //       auth: {\n      //         username: emailAddress,\n      //         password: password\n      //       }\n      //     })\n      //     .then(res => {\n      //       if (res.status === 200) {\n      //         const user = res.data;\n      //         const fullName = user.firstName + ' ' + user.lastName;\n      //         // Use Local Storage to add the user data\n      //         localStorage.setItem('id', user.id);\n      //         localStorage.setItem('username', emailAddress);\n      //         localStorage.setItem('password', password);\n      //         localStorage.setItem('fullName', fullName);\n      //         // Clear form errors\n      //         this.setState({\n      //           authenticationErrors: ''\n      //         });\n      //         // Successful login redirects to homepage\n      //         this.props.history.push('/');\n      //         /**** ERROR COMING FROM THIS LINE*****/\n      //       }\n      //     })\n      //     .catch( err => {\n      //       console.log('error signing in', err);\n      //       // if(err.response.status === 400) {\n      //       //   this.setState({\n      //       //   authenticationErrors: \"Sorry, your email address or password is wrong - Please try again.\"\n      //       //   });\n      //       // } else if(error.response.status === 500) {\n      //       //   this.props.history.push('/error');\n      //       // }\n      //     });\n      // }\n\n    };\n  }\n\n  handleSignOut() {\n    localStorage.clear();\n    this.setState({\n      authenticationErrors: ''\n    });\n    this.props.history.push('/');\n  }\n\n  render() {\n    return React.createElement(UserContext.Provider, {\n      value: {\n        signIn: this.handleSignIn.bind(this),\n        signOut: this.handleSignOut.bind(this),\n        authenticationErrors: this.state.authenticationErrors\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Courses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/courses/:id\",\n      component: CourseDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signin\",\n      render: () => React.createElement(UserSignIn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: UserSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/courses/create\",\n      component: CreateCourse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/courses/:id/update\",\n      component: UpdateCourse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/fobidden\",\n      component: Forbidden,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/notfound\",\n      component: NotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/error\",\n      component: Error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Route, {\n      render: () => React.createElement(NotFound, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/danielgibson/Desktop/GitHub/techdegree-project-10/client/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","axios","Header","Courses","CourseDetail","UserSignIn","UserSignUp","CreateCourse","UpdateCourse","NotFound","Error","Forbidden","App","state","authenticationErrors","handleSignOut","localStorage","clear","setState","props","history","push","render","signIn","handleSignIn","bind","signOut"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,MAAMC,GAAN,SAAkBf,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BgB,KAF0B,GAElB;AACNC,MAAAA,oBAAoB,EAAE,EADhB,CAIR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjDQ,KAFkB;AAAA;;AAqD1BC,EAAAA,aAAa,GAAG;AACdC,IAAAA,YAAY,CAACC,KAAb;AACA,SAAKC,QAAL,CAAc;AACZJ,MAAAA,oBAAoB,EAAE;AADV,KAAd;AAGA,SAAKK,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CADH;AAELC,QAAAA,OAAO,EAAE,KAAKX,aAAL,CAAmBU,IAAnB,CAAwB,IAAxB,CAFJ;AAGLX,QAAAA,oBAAoB,EAAE,KAAKD,KAAL,CAAWC;AAH5B,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEX,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,cAAlB;AAAiC,MAAA,SAAS,EAAEC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,MAAM,EAAE,MAAM,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,SAAS,EAAEE,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,iBAAlB;AAAoC,MAAA,SAAS,EAAEC,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,qBAAlB;AAAwC,MAAA,SAAS,EAAEC,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEG,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEF,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,MAAM,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CAFF,CADF,CANF,CADF;AA0BD;;AAxFyB;;AA2F5B,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\n// import UserContext from './components/UserContext';\n\nimport Header from './components/Header';\nimport Courses from './components/Courses';\nimport CourseDetail from './components/CourseDetail';\nimport UserSignIn from './components/UserSignIn';\nimport UserSignUp from './components/UserSignUp';\nimport CreateCourse from './components/CreateCourse';\nimport UpdateCourse from './components/UpdateCourse';\nimport NotFound from './components/NotFound';\nimport Error from './components/Error';\nimport Forbidden from './components/Fobidden';\n\nclass App extends Component {\n\n  state = {\n    authenticationErrors: '',\n  }\n\n  // handleSignIn(e, emailAddress, password) {\n  //   if(e) {\n  //     e.preventDefault();\n  //   }\n  //   axios.get('http://localhost:5000/api/users',\n  //     {\n  //       auth: {\n  //         username: emailAddress,\n  //         password: password\n  //       }\n  //     })\n  //     .then(res => {\n  //       if (res.status === 200) {\n  //         const user = res.data;\n  //         const fullName = user.firstName + ' ' + user.lastName;\n\n  //         // Use Local Storage to add the user data\n  //         localStorage.setItem('id', user.id);\n  //         localStorage.setItem('username', emailAddress);\n  //         localStorage.setItem('password', password);\n  //         localStorage.setItem('fullName', fullName);\n\n  //         // Clear form errors\n  //         this.setState({\n  //           authenticationErrors: ''\n  //         });\n\n\n  //         // Successful login redirects to homepage\n  //         this.props.history.push('/');\n\n  //         /**** ERROR COMING FROM THIS LINE*****/\n\n  //       }\n  //     })\n  //     .catch( err => {\n  //       console.log('error signing in', err);\n  //       // if(err.response.status === 400) {\n  //       //   this.setState({\n  //       //   authenticationErrors: \"Sorry, your email address or password is wrong - Please try again.\"\n  //       //   });\n  //       // } else if(error.response.status === 500) {\n  //       //   this.props.history.push('/error');\n  //       // }\n  //     });\n  // }\n\n  handleSignOut() {\n    localStorage.clear();\n    this.setState({\n      authenticationErrors: ''\n    });\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <UserContext.Provider\n        value={{\n          signIn: this.handleSignIn.bind(this),\n          signOut: this.handleSignOut.bind(this),\n          authenticationErrors: this.state.authenticationErrors\n        }}>\n        <BrowserRouter>\n          <div>\n            <Header />\n            <Switch>\n              <Route exact path=\"/\" component={Courses} />\n              <Route exact path=\"/courses/:id\" component={CourseDetail} />\n              <Route path=\"/signin\" render={() => <UserSignIn />} />\n              <Route exact path=\"/signup\" component={UserSignUp} />\n              <Route exact path=\"/courses/create\" component={CreateCourse} />\n              <Route exact path=\"/courses/:id/update\" component={UpdateCourse} />\n              <Route exact path=\"/fobidden\" component={Forbidden} />\n              <Route exact path=\"/notfound\" component={NotFound} />\n              <Route exact path=\"/error\" component={Error} />\n              <Route render={() => <NotFound />} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </UserContext.Provider>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}