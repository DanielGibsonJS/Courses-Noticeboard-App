{"ast":null,"code":"var _jsxFileName = \"/Users/danielgibson/Desktop/GitHub/techdegree-project-10/client/src/components/UpdateCourse.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass UpdateCourse extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      const id = this.props.match.params.id;\n      e.preventDefault();\n      axios({\n        method: 'put',\n        url: \"http://localhost:5000/api/courses/\".concat(id),\n        auth: {\n          username: window.localStorage.getItem('EmailAddress'),\n          password: window.localStorage.getItem('Password')\n        },\n        data: {\n          id: id,\n          title: this.state.title,\n          description: this.state.description,\n          estimatedTime: this.state.estimatedTime,\n          materialsNeeded: this.state.materialsNeeded\n        }\n      }).then(() => {\n        this.props.history.push(\"/courses/\".concat(id));\n      })\n      /* Catch errors - Check if server error = push to /error page */\n      .catch(err => {\n        if (err.response.status === 500) {\n          console.error('Error fetching and parsing data', err);\n          this.props.history.push('/error');\n        } else {\n          this.setState({\n            validationErrors: err.response.data.message\n          });\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      course: [],\n      user: [],\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      validationErrors: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  /* Submit button sends PUT request to API */\n\n\n  /* When page first loads - Do this: */\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    axios.get(\"http://localhost:5000/api/courses/\".concat(id)).then(res => {\n      const course = res.data;\n      /* Check if this user is allowed edit this course (Are they the author of the course?) */\n\n      if (course.userId === JSON.parse(localStorage.getItem('UserId'))) {\n        this.setState({\n          user: course.User,\n          title: course.title,\n          description: course.description,\n          estimatedTime: course.estimatedTime,\n          materialsNeeded: course.materialsNeeded\n        });\n      } else {\n        this.props.history.push('/forbidden');\n      }\n    })\n    /* Catch errors - Check if server error = push to /error page */\n    .catch(err => {\n      if (err.response.status === 500) {\n        console.error('Error fetching and parsing data', err);\n        this.props.history.push('/error');\n      } else {\n        this.props.history.push('/notfound');\n      }\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          description = _this$state.description,\n          estimatedTime = _this$state.estimatedTime,\n          materialsNeeded = _this$state.materialsNeeded,\n          user = _this$state.user,\n          validationErrors = _this$state.validationErrors;\n    return React.createElement(\"div\", {\n      className: \"bounds course--detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Update Course\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, validationErrors ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"validation--errors--labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Validation errors\"), React.createElement(\"div\", {\n      className: \"validation-errors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, validationErrors)))) : '', React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid-66\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"course--header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"course--label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Course\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"title\",\n      name: \"title\",\n      type: \"text\",\n      className: \"input-title course--title--input\",\n      placeholder: \"Course title...\",\n      value: title,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"By \", user.firstName, \" \", user.lastName)), React.createElement(\"div\", {\n      className: \"course--description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"description\",\n      name: \"description\",\n      className: \"\",\n      placeholder: \"Course description...\",\n      value: description,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"grid-25 grid-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"course--stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"course--stats--list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"course--stats--list--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Estimated Time\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"estimatedTime\",\n      name: \"estimatedTime\",\n      type: \"text\",\n      className: \"course--time--input\",\n      placeholder: \"Hours\",\n      value: estimatedTime,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }))), React.createElement(\"li\", {\n      className: \"course--stats--list--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Materials Needed\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"materialsNeeded\",\n      name: \"materialsNeeded\",\n      className: \"\",\n      placeholder: \"List materials...\",\n      value: materialsNeeded,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"grid-100 pad-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Update Course\"), React.createElement(Link, {\n      className: \"button button-secondary\",\n      to: \"/courses/\" + this.props.match.params.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default UpdateCourse;","map":{"version":3,"sources":["/Users/danielgibson/Desktop/GitHub/techdegree-project-10/client/src/components/UpdateCourse.js"],"names":["React","Component","Link","axios","UpdateCourse","constructor","props","handleSubmit","e","id","match","params","preventDefault","method","url","auth","username","window","localStorage","getItem","password","data","title","state","description","estimatedTime","materialsNeeded","then","history","push","catch","err","response","status","console","error","setState","validationErrors","message","handleChange","target","name","value","course","user","bind","componentDidMount","get","res","userId","JSON","parse","User","render","firstName","lastName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass UpdateCourse extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      course: [],\n      user: [],\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      validationErrors: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  /* Submit button sends PUT request to API */\n  handleSubmit = (e) => {\n\n    const id =  this.props.match.params.id;\n    e.preventDefault();\n\n    axios ({\n      method: 'put',\n      url: `http://localhost:5000/api/courses/${id}`,\n      auth: {\n        username: window.localStorage.getItem('EmailAddress'),\n        password: window.localStorage.getItem('Password')\n      },\n      data: {\n        id: id,\n        title: this.state.title,\n        description: this.state.description,\n        estimatedTime: this.state.estimatedTime,\n        materialsNeeded: this.state.materialsNeeded,\n      }\n    })\n    .then( () => {\n      this.props.history.push(`/courses/${id}`);\n    })\n    /* Catch errors - Check if server error = push to /error page */\n    .catch(err => {\n      if (err.response.status === 500) {\n        console.error('Error fetching and parsing data', err);\n        this.props.history.push('/error');\n      } else {\n        this.setState({ validationErrors: err.response.data.message })\n      }\n    });\n  }\n\n  /* Handle changes to the form inputs */\n  handleChange = e => {\n    this.setState({\n      [ e.target.name ] : e.target.value \n    });\n  }\n\n  /* When page first loads - Do this: */\n  componentDidMount() {\n\n    const id =  this.props.match.params.id;\n\n    axios.get(`http://localhost:5000/api/courses/${id}`)\n      .then(res => {\n        const course = res.data;\n\n        /* Check if this user is allowed edit this course (Are they the author of the course?) */\n        if(course.userId === JSON.parse(localStorage.getItem('UserId'))) {\n          this.setState({\n            user: course.User,\n            title: course.title,\n            description: course.description,\n            estimatedTime: course.estimatedTime,\n            materialsNeeded: course.materialsNeeded,\n          });\n        } \n        else {\n          this.props.history.push('/forbidden');\n        }\n      })\n      /* Catch errors - Check if server error = push to /error page */\n      .catch(err => {\n        if (err.response.status === 500) {\n          console.error('Error fetching and parsing data', err);\n          this.props.history.push('/error');\n        } else {\n          this.props.history.push('/notfound');\n        }\n      });\n  }\n\n  render() {\n\n    const { title, description, estimatedTime, materialsNeeded, user, validationErrors } = this.state;\n    \n    return (\n      <div className=\"bounds course--detail\">\n        <h1>Update Course</h1>\n        <div>\n          {/* Check if there are any validation errors */}\n          {validationErrors ? (\n            <div>\n              <h2 className=\"validation--errors--labels\">Validation errors</h2>\n              <div className=\"validation-errors\">\n                <ul>\n                  <li>{validationErrors}</li>\n                </ul>\n              </div>\n            </div>\n          ):''}\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"grid-66\">\n              <div className=\"course--header\">\n                <h4 className=\"course--label\">Course</h4>\n                <div>\n                  <input \n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\"\n                    className=\"input-title course--title--input\"\n                    placeholder=\"Course title...\"\n                    value={title}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </div>\n                <p>By {user.firstName} {user.lastName}</p>\n              </div>\n              <div className=\"course--description\">\n                <div>\n                  <textarea\n                    id=\"description\"\n                    name=\"description\"\n                    className=\"\"\n                    placeholder=\"Course description...\"\n                    value={description}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"grid-25 grid-right\">\n              <div className=\"course--stats\">\n                <ul className=\"course--stats--list\">\n                  <li className=\"course--stats--list--item\">\n                    <h4>Estimated Time</h4>\n                    <div>\n                      <input\n                        id=\"estimatedTime\"\n                        name=\"estimatedTime\"\n                        type=\"text\"\n                        className=\"course--time--input\"\n                        placeholder=\"Hours\"\n                        value={estimatedTime}\n                        onChange={e => this.handleChange(e)}\n                      />\n                    </div>\n                  </li>\n                  <li className=\"course--stats--list--item\">\n                    <h4>Materials Needed</h4>\n                    <div>\n                      <textarea\n                        id=\"materialsNeeded\"\n                        name=\"materialsNeeded\"\n                        className=\"\"\n                        placeholder=\"List materials...\"\n                        value={materialsNeeded}\n                        onChange={e => this.handleChange(e)}\n                      />\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"grid-100 pad-bottom\">\n              <button className=\"button\" type=\"submit\">\n                Update Course\n              </button>\n              <Link \n                className=\"button button-secondary\" \n                to={\"/courses/\" + this.props.match.params.id}\n                >Cancel\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default UpdateCourse;"]},"metadata":{},"sourceType":"module"}