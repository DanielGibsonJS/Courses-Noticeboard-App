{"ast":null,"code":"var _jsxFileName = \"/Users/danielgibson/Desktop/GitHub/techdegree-project-10/client/src/components/UpdateCourse.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ValidationErrors from './ValidationErrors';\n\nclass UpdateCourse extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: this.props.match.params.id,\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      user: {},\n      error: {}\n    };\n\n    this.getCourse = id => {\n      axios.get(\"http://localhost:5000/api/courses/\".concat(id)).then(res => {\n        const course = res.data;\n        const user = this.state.user;\n        this.setState({\n          title: course.title,\n          description: course.description,\n          estimatedTime: course.estimatedTime,\n          materialsNeeded: course.materialsNeeded,\n          fullName: \"\".concat(course.User.firstName, \" \").concat(course.User.lastName)\n        });\n        console.log(user); // if(user.id === course.user.id) {\n        //   this.setState({\n        //     title: course.title,\n        //     description: course.description,\n        //     estimatedTime: course.estimatedTime,\n        //     materialsNeeded: course.materialsNeeded,\n        //     fullName: `${course.User.firstName} ${course.User.lastName}`,\n        //   });\n        // } else {\n        //   this.props.history.push('/forbidden');\n        // }\n      }) //Catch any errors and log it to the console\n      .catch(err => {\n        if (err.response.status === 400) {\n          this.props.history.push('/notfound');\n        } else {\n          console.log('Error fetching and parsing data', err);\n          this.props.history.push('/error');\n        }\n      });\n    };\n\n    this.validationError = () => {\n      const _this$state = this.state,\n            title = _this$state.title,\n            description = _this$state.description;\n\n      if (title === \"\") {\n        return \"Validation Error - Please enter a title\";\n      }\n\n      if (description === \"\") {\n        return \"Validation Error - Please enter a description\";\n      }\n\n      return null;\n    };\n  }\n\n  componentDidMount() {\n    const id = this.state.id;\n    const user = this.context.user;\n    this.setState({\n      user\n    });\n    this.getCourse(id);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          id = _this$state2.id,\n          title = _this$state2.title,\n          description = _this$state2.description,\n          estimatedTime = _this$state2.estimatedTime,\n          materialsNeeded = _this$state2.materialsNeeded,\n          error = _this$state2.error,\n          user = _this$state2.user,\n          fullName = _this$state2.fullName;\n    return React.createElement(\"div\", {\n      className: \"bounds course--detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Update Course\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.validationError() && error.status === 400), React.createElement(\"form\", {\n      onSubmit: this.updateCourse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid-66\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"course--header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"course--label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Course\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"title\",\n      name: \"title\",\n      type: \"text\",\n      className: \"input-title course--title--input\",\n      placeholder: \"Course title...\",\n      value: title,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"By \", fullName)), React.createElement(\"div\", {\n      className: \"course--description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"description\",\n      name: \"description\",\n      className: \"\",\n      placeholder: \"Course description...\",\n      value: description,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"grid-25 grid-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"course--stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"course--stats--list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"course--stats--list--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Estimated Time\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"estimatedTime\",\n      name: \"estimatedTime\",\n      type: \"text\",\n      className: \"course--time--input\",\n      placeholder: \"Hours\",\n      value: estimatedTime,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }))), React.createElement(\"li\", {\n      className: \"course--stats--list--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Materials Needed\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"materialsNeeded\",\n      name: \"materialsNeeded\",\n      className: \"\",\n      placeholder: \"List materials...\",\n      value: materialsNeeded,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"grid-100 pad-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Update Course\"), React.createElement(Link, {\n      className: \"button button-secondary\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default UpdateCourse;","map":{"version":3,"sources":["/Users/danielgibson/Desktop/GitHub/techdegree-project-10/client/src/components/UpdateCourse.js"],"names":["React","Component","Link","axios","ValidationErrors","UpdateCourse","state","id","props","match","params","title","description","estimatedTime","materialsNeeded","user","error","getCourse","get","then","res","course","data","setState","fullName","User","firstName","lastName","console","log","catch","err","response","status","history","push","validationError","componentDidMount","context","render","updateCourse","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport ValidationErrors from './ValidationErrors';\n\nclass UpdateCourse extends Component {\n  state = {\n    id: this.props.match.params.id,\n    title: '',\n    description: '',\n    estimatedTime: '',\n    materialsNeeded: '',\n    user: {},\n    error: {},\n  }\n\n  componentDidMount() {\n    const { id } = this.state\n    const { user } = this.context;\n    this.setState({ user });\n    this.getCourse(id);\n  }\n\n  getCourse = (id) => {\n    axios.get(`http://localhost:5000/api/courses/${id}`)\n      .then(res => {\n        const course = res.data;\n        const { user } = this.state;\n\n        this.setState({\n          title: course.title,\n          description: course.description,\n          estimatedTime: course.estimatedTime,\n          materialsNeeded: course.materialsNeeded,\n          fullName: `${course.User.firstName} ${course.User.lastName}`,\n        });\n        \n        console.log(user);\n\n        // if(user.id === course.user.id) {\n        //   this.setState({\n        //     title: course.title,\n        //     description: course.description,\n        //     estimatedTime: course.estimatedTime,\n        //     materialsNeeded: course.materialsNeeded,\n        //     fullName: `${course.User.firstName} ${course.User.lastName}`,\n        //   });\n        // } else {\n        //   this.props.history.push('/forbidden');\n        // }\n      })\n      //Catch any errors and log it to the console\n      .catch(err => {\n        if (err.response.status === 400) {\n          this.props.history.push('/notfound');\n        } else {\n          console.log('Error fetching and parsing data', err);\n          this.props.history.push('/error');\n        }\n      });\n  }\n\n  // updateCourse = e => {\n  //   e.preventDefault();\n  //   const { id } = this.state;\n  //   const { id, }\n  // }\n\n  validationError = () => {\n    const { title, description } = this.state;\n    if (title === \"\") {\n      return \"Validation Error - Please enter a title\";\n    }\n    if (description === \"\") {\n      return \"Validation Error - Please enter a description\";\n    }\n    return null;\n  }\n\n  render() {\n\n    const { id, title, description, estimatedTime, materialsNeeded, error, user, fullName } = this.state;\n\n    return (\n      <div className=\"bounds course--detail\">\n        <h1>Update Course</h1>\n        <div>\n          {/* <ValidationErrors errors={errors} /> */}\n          <Error>{this.validationError() && error.status === 400}</Error>\n          <form onSubmit={this.updateCourse}>\n            <div className=\"grid-66\">\n              <div className=\"course--header\">\n                <h4 className=\"course--label\">Course</h4>\n                <div>\n                  <input \n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\"\n                    className=\"input-title course--title--input\"\n                    placeholder=\"Course title...\"\n                    value={title}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <p>By {fullName}</p>\n              </div>\n              <div className=\"course--description\">\n                <div>\n                  <textarea\n                    id=\"description\"\n                    name=\"description\"\n                    className=\"\"\n                    placeholder=\"Course description...\"\n                    value={description}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"grid-25 grid-right\">\n              <div className=\"course--stats\">\n                <ul className=\"course--stats--list\">\n                  <li className=\"course--stats--list--item\">\n                    <h4>Estimated Time</h4>\n                    <div>\n                      <input\n                        id=\"estimatedTime\"\n                        name=\"estimatedTime\"\n                        type=\"text\"\n                        className=\"course--time--input\"\n                        placeholder=\"Hours\"\n                        value={estimatedTime}\n                        onChange={this.handleChange}\n                      />\n                    </div>\n                  </li>\n                  <li className=\"course--stats--list--item\">\n                    <h4>Materials Needed</h4>\n                    <div>\n                      <textarea\n                        id=\"materialsNeeded\"\n                        name=\"materialsNeeded\"\n                        className=\"\"\n                        placeholder=\"List materials...\"\n                        value={materialsNeeded}\n                        onChange={this.handleChange}\n                      />\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"grid-100 pad-bottom\">\n              <button className=\"button\" type=\"submit\">\n                Update Course\n              </button>\n              <Link className=\"button button-secondary\" to=\"/\">\n                Cancel\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default UpdateCourse;"]},"metadata":{},"sourceType":"module"}